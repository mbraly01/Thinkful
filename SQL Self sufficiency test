-- 1
SELECT *
FROM naep;
-- 2
SELECT * 
FROM naep
LIMIT 50;
-- 3
SELECT state, 
	COUNT(avg_math_4_score) AS count_score,
	ROUND(AVG(avg_math_4_score), 3) AS avg_score,
	MIN(avg_math_4_score) AS min_score,
	MAX(avg_math_4_score) AS max_score
FROM naep
GROUP BY state
ORDER BY state ASC;
-- 4
SELECT state, 
	COUNT(avg_math_4_score) AS count_score,
	ROUND(AVG(avg_math_4_score), 3) AS avg_score,
	MIN(avg_math_4_score) AS min_score,
	MAX(avg_math_4_score) AS max_score
FROM naep
GROUP BY state
HAVING MAX(avg_math_4_score) - MIN(avg_math_4_score) > 30
ORDER BY state ASC;
-- 5
SELECT id AS bottom_10
FROM naep
WHERE year = 2000
ORDER BY avg_math_4_score ASC
LIMIT 10;
-- 6
SELECT ROUND(AVG(avg_math_4_score), 2) AS avg_score
FROM naep
WHERE year >= 2000;
-- 7 - Trouble here
SELECT DISTINCT state AS below_average_statesy2000
FROM naep
WHERE avg_math_4_score IS NOT NULL
	AND avg_math_4_score <
	(SELECT AVG(avg_math_4_score)	
	FROM naep
	WHERE year = 2000);
-- 8
SELECT state AS scores_missing_y2000
FROM naep
WHERE avg_math_4_score IS NULL
	AND year = 2000;
-- 9
SELECT naep.id, 
	ROUND(naep.avg_math_4_score, 2),
	naep.state, 
	finance.total_expenditure
FROM naep LEFT OUTER JOIN finance
ON naep.id = finance.id
WHERE naep.avg_math_4_score IS NOT NULL
	AND naep.year = 2000;




